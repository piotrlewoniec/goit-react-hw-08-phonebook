{"version":3,"file":"static/js/772.f9197cb7.chunk.js","mappings":"0LACA,MAA2B,2BAA3B,EAAmE,6BAAnE,EAA6G,6BAA7G,EAAuJ,6BAAvJ,EAA+L,2B,2DC8G/L,EAvGiB,WACf,IAAMA,GAAWC,EAAAA,EAAAA,MA6BjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBAAID,UAAWC,EAAf,UAA+B,gBACjB,iBAAMD,UAAWC,EAAjB,SAA+B,UAAY,WAEzD,kBACEC,KAAK,eACLC,aAAa,KACbC,OAAO,OACPC,SAAS,OACTC,SArCiB,SAAAC,GACrBA,EAAIC,iBACJ,IAAMC,EAAWF,EAAIG,OAAOC,SAASF,SAASG,MACxCC,EAAQN,EAAIG,OAAOC,SAASE,MAAMD,MAClCE,EAAMP,EAAIG,OAAOC,SAASG,IAAIF,MAC9BG,EAAQR,EAAIG,OAAOC,SAASI,MAAMH,MACvB,KAAbH,GAA6B,KAAVI,GAAwB,KAARC,EAInCA,IAAQC,EAcZjB,GAASkB,EAAAA,EAAAA,IAAS,CAAEd,KAAMO,EAAUI,MAAOA,EAAOI,SAAUH,KAb1DI,IAAAA,OAAAA,QAAwB,0BAJxBA,IAAAA,OAAAA,QAAwB,4BAkB3B,EAOG,WAOE,mBAAOlB,UAAWC,EAAlB,UAAkC,YAEhC,kBACED,UAAWC,EACXkB,KAAK,OACLjB,KAAK,WACLkB,UAAU,IACVC,UAAU,KACVlB,aAAa,OACbmB,YAAY,IACZC,MAAM,kBACNC,UAAQ,QAGZ,mBAAOxB,UAAWC,EAAlB,UAAkC,UAEhC,kBACED,UAAWC,EACXkB,KAAK,QACLjB,KAAK,QACLC,aAAa,QACbmB,YAAY,IAEZC,MAAM,cACNC,UAAQ,QAGZ,mBAAOxB,UAAWC,EAAlB,UAAkC,YAEhC,kBACED,UAAWC,EACXkB,KAAK,WACLjB,KAAK,MACLkB,UAAU,IACVjB,aAAa,MACbmB,YAAY,IAEZC,MAAM,sFACNC,UAAQ,QAGZ,mBAAOxB,UAAWC,EAAlB,UAAkC,mBAEhC,kBACED,UAAWC,EACXkB,KAAK,WACLjB,KAAK,QACLkB,UAAU,IACVjB,aAAa,MACbmB,YAAY,IAEZC,MAAM,sFACNC,UAAQ,QAGZ,SAACC,EAAA,EAAD,CAAQC,MAAM,WAAWC,YAAY,SAI5C,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/register/Register.module.css?cc27","pages/register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formview\":\"Register_formview__M0b2E\",\"form_title\":\"Register_form_title__zPcZ2\",\"inputlabel\":\"Register_inputlabel__TOw6s\",\"inputfield\":\"Register_inputfield__OW6Ot\",\"logotext\":\"Register_logotext__nu41E\"};","import css from './Register.module.css';\n\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/users/operations';\n\nimport { Button } from 'components/button/Button';\nimport Notiflix from 'notiflix';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n\n  const handleRegister = evt => {\n    evt.preventDefault();\n    const username = evt.target.elements.username.value;\n    const email = evt.target.elements.email.value;\n    const pwd = evt.target.elements.pwd.value;\n    const repwd = evt.target.elements.repwd.value;\n    if (username === '' || email === '' || pwd === '') {\n      Notiflix.Notify.warning('Please input missing data');\n      return;\n    }\n    if (pwd !== repwd) {\n      Notiflix.Notify.warning('Please repeat password');\n      return;\n    }\n\n    // const regexEmailPattern =\n    //   /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    // const regexEmail = new RegExp(regexEmailPattern);\n    // const regexPwdPattern = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).8,}/;\n    // const regexPwd = new RegExp(regexPwdPattern);\n    // if (!regexEmail.test(regexEmail) || !regexPwd.test(regexPwd)) {\n    //   Notiflix.Notify.failure('Correct inputed data');\n    //   return;\n    // }\n    dispatch(register({ name: username, email: email, password: pwd }));\n  };\n\n  return (\n    <div className={css.formview}>\n      <h3 className={css.form_title}>\n        Register to <span className={css.logotext}>Phone</span>book\n      </h3>\n      <form\n        name=\"registerform\"\n        autoComplete=\"on\"\n        method=\"POST\"\n        validate=\"true\"\n        onSubmit={handleRegister}\n      >\n        <label className={css.inputlabel}>\n          Username\n          <input\n            className={css.inputfield}\n            type=\"text\"\n            name=\"username\"\n            minLength=\"2\"\n            maxLength=\"50\"\n            autoComplete=\"name\"\n            placeholder=\" \"\n            title=\"Input user name\"\n            required\n          />\n        </label>\n        <label className={css.inputlabel}>\n          E-mail\n          <input\n            className={css.inputfield}\n            type=\"email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            placeholder=\" \"\n            // pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n            title=\"Input email\"\n            required\n          />\n        </label>\n        <label className={css.inputlabel}>\n          Password\n          <input\n            className={css.inputfield}\n            type=\"password\"\n            name=\"pwd\"\n            minLength=\"8\"\n            autoComplete=\"off\"\n            placeholder=\" \"\n            // pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).8,}\"\n            title=\"Password must contain at least 8 characters, including UPPER/lowercase and numbers.\"\n            required\n          />\n        </label>\n        <label className={css.inputlabel}>\n          Repeat password\n          <input\n            className={css.inputfield}\n            type=\"password\"\n            name=\"repwd\"\n            minLength=\"8\"\n            autoComplete=\"off\"\n            placeholder=\" \"\n            // pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).8,}\"\n            title=\"Password must contain at least 8 characters, including UPPER/lowercase and numbers.\"\n            required\n          />\n        </label>\n        <Button label=\"Register\" formButton={true} />\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["dispatch","useDispatch","className","css","name","autoComplete","method","validate","onSubmit","evt","preventDefault","username","target","elements","value","email","pwd","repwd","register","password","Notiflix","type","minLength","maxLength","placeholder","title","required","Button","label","formButton"],"sourceRoot":""}